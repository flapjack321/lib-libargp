From 505dba2b8a5773f7a42d469643d781fe1cd2c821 Mon Sep 17 00:00:00 2001
From: Ethan Cotterell <ethancotterell@gmail.com>
Date: Thu, 3 Jun 2021 09:35:52 +0100
Subject: [PATCH 2/8] patch: remove fmtstream dependency on _LIBC functions

---
 gnulib/gllib/argp-fmtstream.c | 64 +++++++++++++++++++----------------
 1 file changed, 34 insertions(+), 30 deletions(-)

diff --git a/gnulib/gllib/argp-fmtstream.c b/gnulib/gllib/argp-fmtstream.c
index 870c21c..34f4776 100644
--- a/gnulib/gllib/argp-fmtstream.c
+++ b/gnulib/gllib/argp-fmtstream.c
@@ -38,15 +38,16 @@
 #define isblank(ch) ((ch)==' ' || (ch)=='\t')
 #endif
 
-#ifdef _LIBC
+/*#ifdef _LIBC
 # include <wchar.h>
 # include <libio/libioP.h>
 # define __vsnprintf(s, l, f, a) _IO_vsnprintf (s, l, f, a)
-#endif
+#endif*/
 
 #define INIT_BUF_SIZE 200
 #define PRINTF_SIZE_GUESS 150
-
+
+
 /* Return an argp_fmtstream that outputs to STREAM, and which prefixes lines
    written on it with LMARGIN spaces and limits them to RMARGIN columns
    total.  If WMARGIN >= 0, words that extend past RMARGIN are wrapped by
@@ -99,11 +100,11 @@ __argp_fmtstream_free (argp_fmtstream_t fs)
   __argp_fmtstream_update (fs);
   if (fs->p > fs->buf)
     {
-#ifdef _LIBC
-      __fxprintf (fs->stream, "%.*s", (int) (fs->p - fs->buf), fs->buf);
-#else
+// #ifdef _LIBC
+//       __fxprintf (fs->stream, "%.*s", (int) (fs->p - fs->buf), fs->buf);
+// #else
       fwrite_unlocked (fs->buf, 1, fs->p - fs->buf, fs->stream);
-#endif
+// #endif
     }
   free (fs->buf);
   free (fs);
@@ -114,7 +115,8 @@ __argp_fmtstream_free (argp_fmtstream_t fs)
 weak_alias (__argp_fmtstream_free, argp_fmtstream_free)
 #endif
 #endif
-
+
+
 /* Process FS's buffer so that line wrapping is done from POINT_OFFS to the
    end of its buffer.  This code is mostly from glibc stdio/linewrap.c.  */
 void
@@ -148,11 +150,11 @@ __argp_fmtstream_update (argp_fmtstream_t fs)
               size_t i;
               for (i = 0; i < pad; i++)
                 {
-#ifdef _LIBC
-                  if (_IO_fwide (fs->stream, 0) > 0)
-                    putwc_unlocked (L' ', fs->stream);
-                  else
-#endif
+// #ifdef _LIBC
+//                   if (_IO_fwide (fs->stream, 0) > 0)
+//                     putwc_unlocked (L' ', fs->stream);
+//                   else
+// #endif
                     putc_unlocked (' ', fs->stream);
                 }
             }
@@ -289,14 +291,14 @@ __argp_fmtstream_update (argp_fmtstream_t fs)
               else
                 /* Output the first line so we can use the space.  */
                 {
-#ifdef _LIBC
-                  __fxprintf (fs->stream, "%.*s\n",
-                              (int) (nl - fs->buf), fs->buf);
-#else
+// #ifdef _LIBC
+//                   __fxprintf (fs->stream, "%.*s\n",
+//                               (int) (nl - fs->buf), fs->buf);
+// #else
                   if (nl > fs->buf)
                     fwrite_unlocked (fs->buf, 1, nl - fs->buf, fs->stream);
                   putc_unlocked ('\n', fs->stream);
-#endif
+// #endif
 
                   len += buf - fs->buf;
                   nl = buf = fs->buf;
@@ -314,11 +316,11 @@ __argp_fmtstream_update (argp_fmtstream_t fs)
               *nl++ = ' ';
           else
             for (i = 0; i < fs->wmargin; ++i)
-#ifdef _LIBC
-              if (_IO_fwide (fs->stream, 0) > 0)
-                putwc_unlocked (L' ', fs->stream);
-              else
-#endif
+// #ifdef _LIBC
+//               if (_IO_fwide (fs->stream, 0) > 0)
+//                 putwc_unlocked (L' ', fs->stream);
+//               else
+// #endif
                 putc_unlocked (' ', fs->stream);
 
           /* Copy the tail of the original buffer into the current buffer
@@ -343,7 +345,8 @@ __argp_fmtstream_update (argp_fmtstream_t fs)
   /* Remember that we've scanned as far as the end of the buffer.  */
   fs->point_offs = fs->p - fs->buf;
 }
-
+
+
 /* Ensure that FS has space for AMOUNT more bytes in its buffer, either by
    growing the buffer, or by flushing it.  True is returned iff we succeed. */
 int
@@ -356,12 +359,12 @@ __argp_fmtstream_ensure (struct argp_fmtstream *fs, size_t amount)
       /* Flush FS's buffer.  */
       __argp_fmtstream_update (fs);
 
-#ifdef _LIBC
-      __fxprintf (fs->stream, "%.*s", (int) (fs->p - fs->buf), fs->buf);
-      wrote = fs->p - fs->buf;
-#else
+// #ifdef _LIBC
+//       __fxprintf (fs->stream, "%.*s", (int) (fs->p - fs->buf), fs->buf);
+//       wrote = fs->p - fs->buf;
+// #else
       wrote = fwrite_unlocked (fs->buf, 1, fs->p - fs->buf, fs->stream);
-#endif
+// #endif
       if (wrote == fs->p - fs->buf)
         {
           fs->p = fs->buf;
@@ -396,7 +399,8 @@ __argp_fmtstream_ensure (struct argp_fmtstream *fs, size_t amount)
 
   return 1;
 }
-
+
+
 ssize_t
 __argp_fmtstream_printf (struct argp_fmtstream *fs, const char *fmt, ...)
 {
-- 
2.25.1

